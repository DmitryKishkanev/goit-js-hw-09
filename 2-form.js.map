{"version":3,"file":"2-form.js","sources":["../src/js/form/2-form.js"],"sourcesContent":["import throttle from 'lodash.throttle';\n\n// Получем в переменную нашу форму из HTML\nconst formEl = document.querySelector('.feedback-form');\n\n// Переменная для хранения localStorage ключа\nconst STORAGE_KEY = 'feedback-form-state';\n\n// Создаём объект с пустыми свойствами для записи данных и сохранения его в localStorage\nconst formData = {\n  email: '',\n  message: '',\n};\n\n// Слушатель события ввода данных и throttle (функия выполняется один раз в указанный промежкток времени)\nformEl.addEventListener('input', throttle(onInput, 500));\n// Слушатель события отправки данных\nformEl.addEventListener('submit', onFormSubmit);\n\n// Вызов функции записи данных в форму из localStorage и передача ему аргументом нашей формы\npopulateForm(formEl);\n\n// Функция обработчика слушателя события ввода данных (по методу делегирования)\nfunction onInput(evt) {\n  // formData.email = formEl.elements.email.value.trim(); // Обращение к элементу формы напрямую\n  // formData.message = formEl.elements.message.value.trim(); // Обращение к элементу формы напрямую\n  const formElements = evt.currentTarget.elements;\n  formData.email = formElements.email.value.trim();\n  formData.message = formElements.message.value.trim();\n\n  if (formData.email !== '' || formData.message !== '') {\n    localStorage.setItem(STORAGE_KEY, JSON.stringify(formData));\n  } else {\n    localStorage.removeItem(STORAGE_KEY);\n    return;\n  }\n}\n\n// Вызов функции записи данных в форму из localStorage и передача ему аргументом нашей формы\npopulateForm(formEl);\n\n// Функция обработчика слушателя события отправки данных (по методу делегирования)\nfunction onFormSubmit(evt) {\n  evt.preventDefault();\n\n  const formElements = evt.currentTarget.elements;\n  if (\n    formElements.email.value.trim() === '' ||\n    formElements.message.value.trim() === ''\n  ) {\n    window.alert('Fill please all fields');\n  } else {\n    const formDataSnapshot = { ...formData };\n    console.log(formDataSnapshot);\n\n    formData.email = '';\n    formData.message = '';\n    localStorage.removeItem(STORAGE_KEY);\n    evt.currentTarget.reset();\n  }\n}\n\n// Функция записи данных в форму из localStorage\nfunction populateForm(form) {\n  const formElements = form.elements;\n  const savedForm = JSON.parse(localStorage.getItem(STORAGE_KEY));\n\n  if (savedForm) {\n    formData.email = savedForm.email;\n    formData.message = savedForm.message;\n\n    formElements.email.value = formData.email;\n    formElements.message.value = formData.message;\n  }\n}\n"],"names":["formEl","STORAGE_KEY","formData","throttle","onInput","onFormSubmit","populateForm","evt","formElements","formDataSnapshot","form","savedForm"],"mappings":"oGAGA,MAAMA,EAAS,SAAS,cAAc,gBAAgB,EAGhDC,EAAc,sBAGdC,EAAW,CACf,MAAO,GACP,QAAS,EACX,EAGAF,EAAO,iBAAiB,QAASG,EAASC,EAAS,GAAG,CAAC,EAEvDJ,EAAO,iBAAiB,SAAUK,CAAY,EAG9CC,EAAaN,CAAM,EAGnB,SAASI,EAAQG,EAAK,CAGpB,MAAMC,EAAeD,EAAI,cAAc,SAIvC,GAHAL,EAAS,MAAQM,EAAa,MAAM,MAAM,KAAI,EAC9CN,EAAS,QAAUM,EAAa,QAAQ,MAAM,KAAI,EAE9CN,EAAS,QAAU,IAAMA,EAAS,UAAY,GAChD,aAAa,QAAQD,EAAa,KAAK,UAAUC,CAAQ,CAAC,MACrD,CACL,aAAa,WAAWD,CAAW,EACnC,MACD,CACH,CAGAK,EAAaN,CAAM,EAGnB,SAASK,EAAaE,EAAK,CACzBA,EAAI,eAAc,EAElB,MAAMC,EAAeD,EAAI,cAAc,SACvC,GACEC,EAAa,MAAM,MAAM,KAAM,IAAK,IACpCA,EAAa,QAAQ,MAAM,KAAM,IAAK,GAEtC,OAAO,MAAM,wBAAwB,MAChC,CACL,MAAMC,EAAmB,CAAE,GAAGP,GAC9B,QAAQ,IAAIO,CAAgB,EAE5BP,EAAS,MAAQ,GACjBA,EAAS,QAAU,GACnB,aAAa,WAAWD,CAAW,EACnCM,EAAI,cAAc,OACnB,CACH,CAGA,SAASD,EAAaI,EAAM,CAC1B,MAAMF,EAAeE,EAAK,SACpBC,EAAY,KAAK,MAAM,aAAa,QAAQV,CAAW,CAAC,EAE1DU,IACFT,EAAS,MAAQS,EAAU,MAC3BT,EAAS,QAAUS,EAAU,QAE7BH,EAAa,MAAM,MAAQN,EAAS,MACpCM,EAAa,QAAQ,MAAQN,EAAS,QAE1C"}