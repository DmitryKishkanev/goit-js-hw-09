{"version":3,"file":"2-form.js","sources":["../src/js/form/2-form.js"],"sourcesContent":["// Получем в переменную нашу форму из HTML\nconst formEl = document.querySelector('.feedback-form');\n\n// Создаём объект с пустыми свойствами для записи данных и сохранения его в localStorage\nconst formData = {\n  email: '',\n  message: '',\n};\n\n// Слушатель события ввода данных\nformEl.addEventListener('input', onInput);\n// Слушатель события отправки данных\nformEl.addEventListener('submit', onFormSubmit);\n\n// Вызов функции записи данных в форму из localStorage и передача ему аргументом нашей формы\npopulateForm(formEl);\n\n// Функция обработчика слушателя события ввода данных (по методу делегирования)\nfunction onInput(evt) {\n  // formData.email = formEl.elements.email.value.trim(); // Обращение к элементу формы напрямую\n  // formData.message = formEl.elements.message.value.trim(); // Обращение к элементу формы напрямую\n  const formElements = evt.currentTarget.elements;\n  formData.email = formElements.email.value.trim();\n  formData.message = formElements.message.value.trim();\n\n  if (formData.email !== '' || formData.message !== '') {\n    localStorage.setItem('feedback-form-state', JSON.stringify(formData));\n  } else {\n    localStorage.removeItem('feedback-form-state');\n    return;\n  }\n}\n\n// Вызов функции записи данных в форму из localStorage и передача ему аргументом нашей формы\npopulateForm(formEl);\n\n// Функция обработчика слушателя события отправки данных (по методу делегирования)\nfunction onFormSubmit(evt) {\n  evt.preventDefault();\n\n  const formElements = evt.currentTarget.elements;\n  if (\n    formElements.email.value.trim() === '' ||\n    formElements.message.value.trim() === ''\n  ) {\n    window.alert('Fill please all fields');\n  } else {\n    const formDataSnapshot = { ...formData };\n    console.log(formDataSnapshot);\n\n    formData.email = '';\n    formData.message = '';\n    localStorage.removeItem('feedback-form-state');\n    evt.currentTarget.reset();\n  }\n}\n\n// Функция записи данных в форму из localStorage\nfunction populateForm(form) {\n  const formElements = form.elements;\n  const savedForm = JSON.parse(localStorage.getItem('feedback-form-state'));\n\n  if (savedForm) {\n    formData.email = savedForm.email;\n    formData.message = savedForm.message;\n\n    formElements.email.value = formData.email;\n    formElements.message.value = formData.message;\n  }\n}\n"],"names":["formEl","formData","onInput","onFormSubmit","populateForm","evt","formElements","formDataSnapshot","form","savedForm"],"mappings":"oDACA,MAAMA,EAAS,SAAS,cAAc,gBAAgB,EAGhDC,EAAW,CACf,MAAO,GACP,QAAS,EACX,EAGAD,EAAO,iBAAiB,QAASE,CAAO,EAExCF,EAAO,iBAAiB,SAAUG,CAAY,EAG9CC,EAAaJ,CAAM,EAGnB,SAASE,EAAQG,EAAK,CAGpB,MAAMC,EAAeD,EAAI,cAAc,SAIvC,GAHAJ,EAAS,MAAQK,EAAa,MAAM,MAAM,KAAI,EAC9CL,EAAS,QAAUK,EAAa,QAAQ,MAAM,KAAI,EAE9CL,EAAS,QAAU,IAAMA,EAAS,UAAY,GAChD,aAAa,QAAQ,sBAAuB,KAAK,UAAUA,CAAQ,CAAC,MAC/D,CACL,aAAa,WAAW,qBAAqB,EAC7C,MACD,CACH,CAGAG,EAAaJ,CAAM,EAGnB,SAASG,EAAaE,EAAK,CACzBA,EAAI,eAAc,EAElB,MAAMC,EAAeD,EAAI,cAAc,SACvC,GACEC,EAAa,MAAM,MAAM,KAAM,IAAK,IACpCA,EAAa,QAAQ,MAAM,KAAM,IAAK,GAEtC,OAAO,MAAM,wBAAwB,MAChC,CACL,MAAMC,EAAmB,CAAE,GAAGN,GAC9B,QAAQ,IAAIM,CAAgB,EAE5BN,EAAS,MAAQ,GACjBA,EAAS,QAAU,GACnB,aAAa,WAAW,qBAAqB,EAC7CI,EAAI,cAAc,OACnB,CACH,CAGA,SAASD,EAAaI,EAAM,CAC1B,MAAMF,EAAeE,EAAK,SACpBC,EAAY,KAAK,MAAM,aAAa,QAAQ,qBAAqB,CAAC,EAEpEA,IACFR,EAAS,MAAQQ,EAAU,MAC3BR,EAAS,QAAUQ,EAAU,QAE7BH,EAAa,MAAM,MAAQL,EAAS,MACpCK,EAAa,QAAQ,MAAQL,EAAS,QAE1C"}